{"version":3,"file":"markdownItHashtag.modern.js","sources":["../index.js"],"sourcesContent":["const renderHashtagOpen = (tokens, idx) => '<a href=\"/tags/' + tokens[idx].content.toLowerCase() + '\" class=\"tag\">';\nconst       renderHashtagClose = () => '</a>';\nconst       renderHashtagText = (tokens, idx) => '#' + tokens[idx].content;\nconst       isLinkOpenRegExp = /^<a[>\\s]/i;\nconst       isLinkCloseRegExp = /^<\\/a\\s*>/i;\nconst       isLinkOpen = (str) => isLinkOpenRegExp.test(str);\nconst       isLinkClose = (str) => isLinkCloseRegExp.test(str);\n\nexport default function hashtagPlugin(md, options) {\n  const arrayReplaceAt = md.utils.arrayReplaceAt;\n  const         escapeHtml = md.utils.escapeHtml;\n  const       assign = md.utils.assign;\n  const    defaultOpts = {\n    preceding: '^|\\\\s',\n    hashtagRegExp: '\\\\w+'\n  };\n  const         opts = typeof options === 'object' ? assign(defaultOpts, options) : defaultOpts;\n  const    regex = new RegExp('(' + opts.preceding + ')#(' + opts.hashtagRegExp + ')', 'gu');\n\n  function hashtag(state) {\n    const Token = state.Token;\n    const           blockTokens = state.tokens;\n    let i, j, l, m;\n    let        tagName,\n        currentToken,\n        token,\n        tokens,\n        htmlLinkLevel,\n        matches,\n        text,\n        nodes,\n        pos,\n        level;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') {\n        continue;\n      }\n\n      tokens = blockTokens[j].children;\n\n      htmlLinkLevel = 0;\n\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n\n        // skip content of markdown links\n        if (currentToken.type === 'link_close') {\n          i--;\n          while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n            i--;\n          }\n          continue;\n        }\n\n        // skip content of html links\n        if (currentToken.type === 'html_inline') {\n          // we are going backwards, so isLinkOpen shows end of link\n          if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n            htmlLinkLevel--;\n          }\n          if (isLinkClose(currentToken.content)) {\n            htmlLinkLevel++;\n          }\n        }\n        if (htmlLinkLevel > 0) {\n          continue;\n        }\n\n        if (currentToken.type !== 'text') {\n          continue;\n        }\n\n        // find hashtags\n        text = currentToken.content;\n        matches = text.match(regex);\n\n        if (matches === null) {\n          continue;\n        }\n\n        nodes = [];\n        level = currentToken.level;\n\n        for (m = 0; m < matches.length; m++) {\n          tagName = matches[m].split('#', 2)[1];\n\n          // find the beginning of the matched text\n          pos = text.indexOf(matches[m]);\n          // find the beginning of the hashtag\n          pos = text.indexOf('#' + tagName, pos);\n\n          if (pos > 0) {\n            token = new Token('text', '', 0);\n            token.content = text.slice(0, pos);\n            token.level = level;\n            nodes.push(token);\n          }\n\n          token = new Token('hashtag_open', '', 1);\n          token.content = tagName;\n          token.level = level++;\n          nodes.push(token);\n\n          token = new Token('hashtag_text', '', 0);\n          token.content = escapeHtml(tagName);\n          token.level = level;\n          nodes.push(token);\n\n          token = new Token('hashtag_close', '', -1);\n          token.level = --level;\n          nodes.push(token);\n\n          text = text.slice(pos + 1 + tagName.length);\n        }\n\n        if (text.length > 0) {\n          token = new Token('text', '', 0);\n          token.content = text;\n          token.level = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.core.ruler.after('inline', 'hashtag', hashtag);\n  /* eslint-disable camelcase */\n  md.renderer.rules.hashtag_open = renderHashtagOpen;\n  md.renderer.rules.hashtag_text = renderHashtagText;\n  md.renderer.rules.hashtag_close = renderHashtagClose;\n  /* eslint-enable camelcase */\n}\n"],"names":["renderHashtagOpen","tokens","idx","content","toLowerCase","renderHashtagClose","renderHashtagText","isLinkOpenRegExp","isLinkCloseRegExp","isLinkOpen","str","test","isLinkClose","hashtagPlugin","md","options","arrayReplaceAt","utils","escapeHtml","assign","defaultOpts","preceding","hashtagRegExp","opts","regex","RegExp","hashtag","state","Token","blockTokens","i","j","l","m","tagName","currentToken","token","htmlLinkLevel","matches","text","nodes","pos","level","length","type","children","match","split","indexOf","slice","push","core","ruler","after","renderer","rules","hashtag_open","hashtag_text","hashtag_close"],"mappings":"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"}